name: Build Signed APK

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Decode Signing Key
        run: |
          echo "${{ secrets.ANDROID_SIGNING_KEY }}" > keystore_base64.txt
          base64 -d keystore_base64.txt > keystore.jks
          # 将密钥库移动到项目根目录
          mv keystore.jks ${{ github.workspace }}/keystore.jks
        shell: bash

      - name: Build Release APK
        uses: gradle/gradle-build-action@v3
        with:
          arguments: |
            -Pandroid.injected.signing.store.file=${{ github.workspace }}/keystore.jks
            -Pandroid.injected.signing.store.password=${{ secrets.ANDROID_SIGNING_PASSWORD }}
            -Pandroid.injected.signing.key.alias=${{ secrets.ANDROID_KEY_ALIAS }}
            -Pandroid.injected.signing.key.password=${{ secrets.ANDROID_KEY_PASSWORD }}
            assembleRelease
          build-root-directory: .

      # 关键步骤：查找实际生成的 APK 路径
      - name: Find and Move APK
        run: |
          # 查找所有 release APK 文件
          APK_PATH=$(find . -path '*/release/*.apk' ! -path '*/debug/*' -print -quit)
          
          # 如果找到，复制到固定位置
          if [ -n "$APK_PATH" ]; then
            echo "Found APK at: $APK_PATH"
            mkdir -p apk-output
            cp "$APK_PATH" apk-output/app-release.apk
          else
            echo "Error: No release APK found!"
            find . -name "*.apk" || echo "No APK files found"
            exit 1
          fi
        shell: bash

      # 上传步骤 - 使用固定位置
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: apk-output/app-release.apk
          if-no-files-found: error
